# AUTOGENERATED FROM 'dbschema/queries/company/get_facilities_for_company.edgeql' WITH:
#     $ edgedb-py --target blocking


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetFacilitiesForCompanyResult(NoPydanticValidation):
    id: uuid.UUID
    name: str
    facility: list[GetFacilitiesForCompanyResultFacilityItem]


@dataclasses.dataclass
class GetFacilitiesForCompanyResultFacilityItem(NoPydanticValidation):
    id: uuid.UUID
    address: str | None
    city: str | None
    name: str
    state: str | None


def get_facilities_for_company(
    executor: edgedb.Executor,
    *,
    id: uuid.UUID,
) -> GetFacilitiesForCompanyResult | None:
    return executor.query_single(
        """\
        select company::Company {
            id,
            name,
            facility: {
                id,
                address,
                city,
                name,
                state
            }
        } 
        filter .id=<uuid>$id\
        """,
        id=id,
    )
